@{
    if (Session["UserId"] == null)
    {
        <div class="alert alert-warning">
            You are not logged in. Please <a href="@Url.Action("Login", "Account")">login</a> to access your profile.
        </div>
    }
}

@{
    ViewBag.Title = "Profile";
    Layout = null;
}
@model DatabaseProject.Models.ProfileViewModel

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: Arial, sans-serif;
    }

    body {
        display: flex;
        min-height: 100vh;
        background-color: #f8f8f8;
        transition: margin-left 0.3s ease;
    }

    .sidebar {
        width: 250px;
        background-color: #ffd3d1;
        height: 100vh;
        position: fixed;
        left: -250px; /* Hide sidebar by default */
        top: 0;
        padding-top: 20px;
        transition: left 0.3s ease;
        z-index: 100;
    }

    .main-content {
        margin-left: auto;
        padding: 10px;
        width: 100%;
        margin-top: 70px;
    }

        .main-content > div {
            width: 100%;
            display: none;
        }

    #dashboard-section {
        display: block;
    }

    .hamburger-icon {
        font-size: 34px;
        color: #f06e6e;
        cursor: pointer;
        display: block;
        z-index: 200;
    }

    .sidebar h2 {
        text-align: center;
        color: #f06e6e;
        font-size: 24px;
        margin-bottom: 30px;
    }

    .sidebar .menu-item {
        padding: 15px 20px;
        font-size: 18px;
        color: #333;
        text-decoration: none;
        display: block;
        transition: background-color 0.3s;
    }

        .sidebar .menu-item:hover,
        .sidebar .menu-item.active {
            background-color: #f06e6e;
            color: white;
        }

    header {
        padding: 15px 20px;
        background-color: #ffd3d1;
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: fixed;
        width: 100%;
        top: 0;
        left: 0;
        z-index: 200;
    }

    .home-button {
        font-size: 34px;
        color: #f06e6e;
        text-decoration: none;
        margin-left: auto; /* Push to the right */
    }

        .home-button:hover {
            color: #e94e77;
        }

    #chat-section {
        display: none;
        width: 80%;
        height: calc(100vh - 70px);
        overflow-y: auto;
        background-color: white;
        padding: 20px;
    }
</style>

<body>
    <header>
        <div class="hamburger-icon" onclick="toggleSidebar()">☰</div>
        <a href="@Url.Action("Index", "Home")" class="home-button">🏠</a>
    </header>
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <h2>Sweet Home</h2>
        <a href="#" class="menu-item active" onclick="loadSection('reserve-section', this)">Reserve</a>
        <a href="#" class="menu-item" onclick="loadSection('property-section', this)">Current Propertie</a>
        <a href="#" class="menu-item" onclick="loadChatPage('chat-section', this)"> Chat </a>
        <a href="#" class="menu-item" onclick="loadSection('notifications-section', this)">Notifications</a>
        <a href="#" class="menu-item">Account</a>
        <a href="@Url.Action("Logout", "Account")" class="menu-item btn btn-danger">Logout</a>
    </div>


    <!-- Main Content -->
    <div class="main-content">
        <!-- Dashboard Section -->
        <div id="reserve-section" style="display: block;">
            <h2>No Reserve Property</h2>
        </div>

        <!-- Property Section -->
        <div id="property-section" style="display: none;">
            <h2>Add Properties</h2>
            <p>Property management section.</p>
        </div>

        <!-- Chat Section -->
        <div id="chat-section" style="display: none">
            <div id="chat-box">
                @Html.Action("Index", "Chat", new { tenantId = 1, propertyOwnerId = 1, propertyId = 4 })
            </div>
        </div>

        <!-- Notifications Section -->
        <div id="notifications-section" style="display: none;">
            <h2>Notifications</h2>
            <p>Your notifications will appear here.</p>
        </div>
    </div>




    <script>
        function toggleSidebar() {
            const sidebar = document.getElementById("sidebar");
            const currentLeft = sidebar.style.left;

            if (currentLeft === "0px") {
                sidebar.style.left = "-250px";
                document.querySelector('.main-content').style.marginLeft = "0";
            } else {
                sidebar.style.left = "0";
                document.querySelector('.main-content').style.marginLeft = "250px";
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            loadSection("reserve-section");
        });

        function loadSection(sectionId) {
            document.querySelectorAll('.main-content > div').forEach(section => {
                section.style.display = 'none';
            });

            document.getElementById(sectionId).style.display = 'block';

            document.querySelectorAll('.sidebar .menu-item').forEach(item => item.classList.remove('active'));

            const clickedElement = document.querySelector(`.sidebar .menu-item[onclick*="${sectionId}"]`);
            if (clickedElement) {
                clickedElement.classList.add('active');
            }
        }

        function loadChatPage() {
            document.querySelectorAll('.main-content > div').forEach(section => {
                section.style.display = 'none';
            });

            const chatSection = document.getElementById("chat-section");
            chatSection.style.display = 'block';

            document.querySelectorAll('.sidebar .menu-item').forEach(item => item.classList.remove('active'));

            const chatMenuItem = document.querySelector('.sidebar .menu-item[onclick*="loadChatPage"]');
            if (chatMenuItem) {
                chatMenuItem.classList.add('active');
            }

            fetch('/Chat/Index?tenantId=1&propertyOwnerId=1&propertyId=4')
                .then(response => response.text())
                .then(html => {
                    document.getElementById("chat-box").innerHTML = html;
                })
                .catch(error => console.error('Error loading chat:', error));
        }


    </script>
</body>
